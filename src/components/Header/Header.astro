---
import HeaderElement from "./HeaderElement.astro";
import { IDS } from "../helpers/constants";
import { getImageSrc } from "../helpers/utils";

const headerItems = [
  { href: `#${IDS.home}`, label: "Home" },
  { href: `#${IDS.about_us}`, label: "About Us" },
  { href: `#${IDS.schedule}`, label: "Schedule" },
  { href: `#${IDS.fees}`, label: "Fees" },
  { href: `#${IDS.team}`, label: "Team" },
  { href: `#${IDS.register}`, label: "Register" },
  { href: `#${IDS.contact}`, label: "Contact" },
] as const;
---

<header id="header" class="sticky left-0 top-0 z-50 w-full bg-white">
  <div class="container mx-auto">
    <div class="relative -mx-4 flex items-center justify-between">
      <div class="w-44 max-w-full px-4">
        <a href="/" class="block w-full py-5">
          <img
            src={getImageSrc("logo.png")}
            alt="Star Academy of Montessori Logo"
            class="block w-full"
          />
        </a>
      </div>
      <div class="px-4">
        <div>
          <button
            id="navbarToggler"
            class="absolute right-4 top-1/2 block -translate-y-1/2 rounded-lg px-3 py-[6px] ring-primary focus:ring-2 lg:hidden"
          >
            <span class="relative my-[6px] block h-[2px] w-[30px] bg-primary"
            ></span>
            <span class="relative my-[6px] block h-[2px] w-[30px] bg-primary"
            ></span>
            <span class="relative my-[6px] block h-[2px] w-[30px] bg-primary"
            ></span>
          </button>
          <nav
            id="navbarCollapse"
            class="absolute right-4 top-full hidden w-full
            max-w-[350px] rounded-lg bg-white px-6 py-5 shadow transition-all
            lg:static lg:block lg:w-full lg:max-w-full lg:bg-transparent
            lg:px-0 lg:shadow-none xl:ml-11"
          >
            <ul class="block lg:flex" id="navigation">
              <!-- Render header items here using server-side templating or JavaScript -->
              {
                headerItems.map((item) => (
                  <HeaderElement href={item.href}>{item.label}</HeaderElement>
                ))
              }
            </ul>
          </nav>
        </div>
      </div>
    </div>
  </div>
</header>

<script>
  document.addEventListener("DOMContentLoaded", function () {
    const navbarToggler = document.getElementById("navbarToggler");
    const navbarCollapse = document.getElementById("navbarCollapse");
    const navigationItems = document.querySelectorAll("#navigation a");

    if (!navbarToggler) return;
    if (!navbarCollapse) return;

    navbarToggler.addEventListener("click", function () {
      navbarCollapse.classList.toggle("hidden");
      navbarToggler.classList.toggle("navbarTogglerActive");
    });

    document.addEventListener("click", function (event) {
      const target = event.target;

      if (!(target instanceof Node)) return; // Ensure target is a Node

      const isClickInsideNav =
        navbarToggler.contains(target) || navbarCollapse.contains(target);

      if (!isClickInsideNav) {
        navbarCollapse.classList.add("hidden");
        navbarToggler.classList.remove("navbarTogglerActive");
      }
    });

    navigationItems.forEach((item) => {
      item.addEventListener("click", function (event) {
        event.preventDefault(); // Prevent the default anchor click behavior
        navbarCollapse.classList.add("hidden");
        navbarToggler.classList.remove("navbarTogglerActive");

        let id = null;
        if (
          event.target &&
          "href" in event.target &&
          typeof event.target.href === "string"
        ) {
          id = event.target.href.split("#")[1];
        }
        if (!id) return;

        const element = document.getElementById(id);
        if (!element) return;

        const headerElement = document.getElementById("header");
        if (!headerElement) return;

        const startPosition = window.scrollY;
        const paddingTop = headerElement.offsetHeight;
        const { top } = element.getBoundingClientRect();
        const newPosition = top + startPosition - paddingTop;

        requestAnimationFrame(() => {
          window.scroll(startPosition, newPosition);
        });
      });
    });
  });
</script>
