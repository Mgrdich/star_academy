---
import HeaderElement from "./HeaderElement.astro";
import { IDS } from "../helpers/constants";
import { getImageSrc } from "../helpers/utils";

const headerItems = [
  { href: `#${IDS.home}`, label: "Home" },
  { href: `#${IDS.about_us}`, label: "About Us" },
  { href: `#${IDS.schedule}`, label: "Schedule" },
  { href: `#${IDS.fees}`, label: "Fees" },
  { href: `#${IDS.team}`, label: "Team" },
  { href: `#${IDS.register}`, label: "Register" },
  { href: `#${IDS.contact}`, label: "Contact" },
] as const;
---

<header
  id="header"
  x-data="{navbarOpen: false}"
  class="sticky left-0 top-0 z-50 w-full bg-white"
>
  <div class="container mx-auto">
    <div class="relative -mx-4 flex items-center justify-between">
      <div class="w-44 max-w-full px-4">
        <a href="/" class="block w-full py-5">
          <img
            src={getImageSrc("logo.png")}
            alt="Star Academy of Montessori Logo"
            class="block w-full"
          />
        </a>
      </div>
      <div class="px-4">
        <div>
          <button
            @click="navbarOpen = !navbarOpen"
            :class="navbarOpen && 'navbarTogglerActive'"
            id="navbarToggler"
            class="absolute right-4 top-1/2 block -translate-y-1/2 rounded-lg px-3 py-[6px] ring-primary focus:ring-2 lg:hidden"
          >
            <span class="relative my-[6px] block h-[2px] w-[30px] bg-primary"
            ></span>
            <span class="relative my-[6px] block h-[2px] w-[30px] bg-primary"
            ></span>
            <span class="relative my-[6px] block h-[2px] w-[30px] bg-primary"
            ></span>
          </button>
          <nav
            x-transition=""
            :class="!navbarOpen && 'hidden'"
            id="navbarCollapse"
            class="absolute right-4 top-full w-full max-w-[350px]
            rounded-lg bg-white px-6 py-5 shadow transition-all lg:static
            lg:block lg:w-full lg:max-w-full lg:bg-transparent lg:px-0
            lg:shadow-none xl:ml-11"
          >
            <ul class="block lg:flex" id="navigation">
              {
                headerItems.map((item) => (
                  <HeaderElement href={item.href}>{item.label}</HeaderElement>
                ))
              }
            </ul>
          </nav>
        </div>
      </div>
    </div>
  </div>
</header>

<script>
  // Select the ul element
  import * as domain from "domain";

  const ulElement = document.getElementById("navigation");

  // Add event listener to the ul element to capture clicks on li elements
  ulElement.addEventListener("pointerup", function (event) {
    // Check if the clicked element is an li
    event.stopPropagation();
    event.preventDefault();

    if (
      event.target &&
      "nodeName" in event.target &&
      "href" in event.target &&
      event.target.nodeName === "A"
    ) {
      const id = event.target.href.split("#")[1];

      if (!id) return;
      const element = document.getElementById(id);

      if (!element) return;

      const headerElement = document.getElementById("header");

      if (!headerElement) return;

      const startPosition = window.scrollY;
      const paddingTop = headerElement.offsetHeight;
      const { top } = element.getBoundingClientRect();
      const newPosition = top + startPosition - paddingTop;
      requestAnimationFrame(() => {
        window.scroll(startPosition, newPosition);
      });
    }
  });
</script>
